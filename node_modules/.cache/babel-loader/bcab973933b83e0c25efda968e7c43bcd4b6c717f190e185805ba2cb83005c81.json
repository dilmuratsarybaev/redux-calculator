{"ast":null,"code":"const {\n  createStore\n} = require(\"redux\");\nexport const calculatedActionTypes = {\n  ADD: \"ADD\",\n  SUBTRACT: \"SUBTRACT\",\n  DIVIDE: \"DIVIDE\",\n  MULTIPLY: \"MULTIPLY\"\n};\nconst initialState = {\n  result: 0\n};\nconst calculateReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case calculatedActionTypes.ADD:\n      return {\n        ...state,\n        result: state.result + action.payload\n      };\n    case calculatedActionTypes.SUBTRACT:\n      return {\n        ...state,\n        result: state.result - action.payload\n      };\n    case calculatedActionTypes.DIVIDE:\n      return {\n        ...state,\n        result: state.result / action.payload\n      };\n    case calculatedActionTypes.MULTIPLY:\n      return {\n        ...state,\n        result: state.result * action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const store = createStore(calculateReducer, initialState);\nstore.subscribe(calculateReducer);","map":{"version":3,"names":["createStore","require","calculatedActionTypes","ADD","SUBTRACT","DIVIDE","MULTIPLY","initialState","result","calculateReducer","state","action","type","payload","store","subscribe"],"sources":["/Users/dilmuratsarybaevgmail.com/Desktop/01-starting-project/src/store/index.js"],"sourcesContent":["const { createStore } = require(\"redux\");\n\nexport const calculatedActionTypes = {\n  ADD: \"ADD\",\n  SUBTRACT: \"SUBTRACT\",\n  DIVIDE: \"DIVIDE\",\n  MULTIPLY: \"MULTIPLY\",\n};\n\nconst initialState = {\n  result: 0,\n};\n\nconst calculateReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case calculatedActionTypes.ADD:\n      return {\n        ...state,\n        result: state.result + action.payload,\n      };\n    case calculatedActionTypes.SUBTRACT:\n      return {\n        ...state,\n        result: state.result - action.payload,\n      };\n    case calculatedActionTypes.DIVIDE:\n      return {\n        ...state,\n        result: state.result / action.payload,\n      };\n    case calculatedActionTypes.MULTIPLY:\n      return {\n        ...state,\n        result: state.result * action.payload,\n      };\n    default:\n      return state;\n  }\n};\n \n export const store = createStore(calculateReducer, initialState);\n\n store.subscribe(calculateReducer)"],"mappings":"AAAA,MAAM;EAAEA;AAAY,CAAC,GAAGC,OAAO,CAAC,OAAO,CAAC;AAExC,OAAO,MAAMC,qBAAqB,GAAG;EACnCC,GAAG,EAAE,KAAK;EACVC,QAAQ,EAAE,UAAU;EACpBC,MAAM,EAAE,QAAQ;EAChBC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,MAAMC,gBAAgB,GAAG,YAAkC;EAAA,IAAjCC,KAAK,uEAAGH,YAAY;EAAA,IAAEI,MAAM;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKV,qBAAqB,CAACC,GAAG;MAC5B,OAAO;QACL,GAAGO,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IACH,KAAKX,qBAAqB,CAACE,QAAQ;MACjC,OAAO;QACL,GAAGM,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IACH,KAAKX,qBAAqB,CAACG,MAAM;MAC/B,OAAO;QACL,GAAGK,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IACH,KAAKX,qBAAqB,CAACI,QAAQ;MACjC,OAAO;QACL,GAAGI,KAAK;QACRF,MAAM,EAAEE,KAAK,CAACF,MAAM,GAAGG,MAAM,CAACE;MAChC,CAAC;IACH;MACE,OAAOH,KAAK;EAAC;AAEnB,CAAC;AAEA,OAAO,MAAMI,KAAK,GAAGd,WAAW,CAACS,gBAAgB,EAAEF,YAAY,CAAC;AAEhEO,KAAK,CAACC,SAAS,CAACN,gBAAgB,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}